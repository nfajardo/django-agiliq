"""
Django settings for pollsapi project.

Generated by 'django-admin startproject' using Django 2.0.13.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'z_)78zlpaquy+4f1=pe@xbl9-+)^j&!5q@04d(rl*&plz%@w*9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# We need to allow every host in development to support the subdomains,
# Be sure to configure it properly in production
ALLOWED_HOSTS = ['*']


# Application definition

SHARED_APPS = [
    'tenant_schemas',  # mandatory, should always be before any django app
    'tenants',  # you must list the app where your tenant model resides in

    # everything below here is up to your project needs
    'bootstrap3',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles'
]

TENANT_APPS = [
    # Your tenant-specific apps
    'polls'
]

# We need to mix shared and tenant apps
INSTALLED_APPS = SHARED_APPS + TENANT_APPS

# We need to specify where our tenant model lives
TENANT_MODEL = 'tenants.Tenant'

MIDDLEWARE = [
    # Add TenantMiddleware on top of the MIDDLEWARE list to allow every request
    # redirect to the specific tenant
    'tenant_schemas.middleware.TenantMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Sometimes we want to have different urls and views in our public tenant and
# our specific tenants, so we need to set the URLCONF files for each case
# Please check: http://django-tenant-schemas.readthedocs.io/en/latest/install.html#tenant-view-routing
# for more info.
ROOT_URLCONF = 'pollsapi.tenant_urls'
PUBLIC_SCHEMA_URLCONF = 'pollsapi.public_urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'pollsapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        # Use the tenant_schemas specific postgresql_backend
        'ENGINE': 'tenant_schemas.postgresql_backend',
        'NAME': 'polls_db',
        'USER': 'admin',
        'PASSWORD': 'datatres',
        'HOST': 'localhost',
        'PORT': 5433,
    }
}

# We need to provide this DATABASE_ROUTER in order to get the apps synced to the
# correct schema
DATABASE_ROUTERS = (
    'tenant_schemas.routers.TenantSyncRouter',
)


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

# Media files
MEDIA_URL = '/media/'
DEFAULT_FILE_STORAGE = 'tenant_schemas.storage.TenantFileSystemStorage'